{"version":3,"sources":["components/Button/Button.module.css","components/Button/Button.tsx","redux/actions/addcountAC.ts","components/Counter/Counter.tsx","components/Input/Input.tsx","components/SettingBlock/SettingBlock.tsx","App.tsx","reportWebVitals.ts","redux/reducers/counter-reducer.ts","redux/store.ts","index.tsx","components/SettingBlock/SettingBlock.module.css","components/Counter/Counter.module.css","components/Input/Input.module.css"],"names":["module","exports","Button","props","className","s","btn","onClick","changeCount","disabled","btn_text","name","ACTION_TYPE","statusChangeAC","status","type","STATUS_CHANGE","Counter","dispatch","useDispatch","state","useSelector","counter","classes","startValue","maxValue","count_red","classes_2","message","count","container","scoreboard","container_btn","ADD_COUNT","RESET_COUNT","Input","input_red","setting_input","SettingBlock","useState","setMaxValue","setStartValue","window_settings","setting_max_value","params_value","value","onChange","e","currentTarget","setting_start_value","CONTROL","controlAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","counterReducer","action","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,SAAW,2B,kKCUhD,SAASC,EAAOC,GACrB,OACE,mCACE,qBAAKC,UAAWC,IAAEC,IAAlB,SACE,wBACEC,QAASJ,EAAMK,YACfC,SAAUN,EAAMM,SAFlB,SAIE,sBAAML,UAAWC,IAAEK,SAAnB,SAA8BP,EAAMQ,a,ICnBlCC,E,iBAAAA,K,sBAAAA,E,0BAAAA,E,8BAAAA,E,mBAAAA,M,KAyBL,IASMC,EAAiB,SAACC,GAAD,MAAsD,CAClFC,KAAMH,EAAYI,cAClBF,WC5BK,SAASG,IAEd,IAAMC,EAAWC,cACXC,EAAQC,aAAyC,SAAAD,GAAK,OAAIA,EAAME,WAEhEC,EAAUH,EAAMI,aAAeJ,EAAMK,UAA6B,UAAjBL,EAAMN,OACzDT,IAAEqB,UACF,GACEC,EAA6B,OAAjBP,EAAMN,OACpBT,IAAEuB,QACFvB,IAAEwB,MASN,OACE,sBAAKzB,UAAWC,IAAEyB,UAAlB,UACE,qBAAK1B,UAAWC,IAAE0B,WAAlB,SACE,sBAAM3B,UAAWmB,EAAU,IAAMI,EAAjC,SAEqB,OAAjBP,EAAMN,OACFM,EAAMI,WACW,UAAjBJ,EAAMN,OACN,mBADA,mCAMV,sBAAKV,UAAWC,IAAE2B,cAAlB,UACE,cAAC9B,EAAD,CAAQS,KAAM,MACNa,WAAYJ,EAAMI,WAClBC,SAAUL,EAAMK,SAChBjB,YAxBG,WACfU,EDMK,CACLH,KAAMH,EAAYqB,aCiBNxB,SAAUW,EAAMI,aAAeJ,EAAMK,WAE7C,cAACvB,EAAD,CAAQS,KAAM,QACNa,WAAYJ,EAAMI,WAClBC,SAAUL,EAAMK,SAChBjB,YA3BK,WACjBU,EDO4C,CAC9CH,KAAMH,EAAYsB,eCmBJzB,SAA+B,IAArBW,EAAMI,mB,mDCzCzB,SAASW,EAAMhC,GACpB,IAAIoB,EAA2B,UAAjBpB,EAAMW,QAAqC,eAAfX,EAAMQ,MAE3B,UAAjBR,EAAMW,QAAqC,aAAfX,EAAMQ,KADlCN,IAAE+B,UAGA,GACN,OACE,mCACE,8BACE,mCACEhC,UAAWmB,EAAU,IAAMlB,IAAEgC,cAC7BtB,KAAK,UACDZ,QCZP,SAASmC,IAEd,IAAMpB,EAAWC,cACXC,EAAQC,aAAyC,SAAAD,GAAK,OAAIA,EAAME,WAHzC,EAKCiB,mBAASnB,EAAMK,UALhB,mBAKxBA,EALwB,KAKde,EALc,OAMKD,mBAASnB,EAAMI,YANpB,mBAMxBA,EANwB,KAMZiB,EANY,KA+B7B,OACE,sBAAKrC,UAAWC,IAAEyB,UAAlB,UACE,sBAAK1B,UAAWC,IAAEqC,gBAAlB,UACE,sBAAKtC,UAAWC,IAAEsC,kBAAlB,UACE,sBAAMvC,UAAWC,IAAEuC,aAAnB,yBACA,cAACT,EAAD,CAAOU,MAAOpB,EACPd,KAAM,WACNG,OAAQM,EAAMN,OACdgC,SA/Bf,SAA0BC,GACxBP,GAAaO,EAAEC,cAAcH,QACxBE,EAAEC,cAAcH,MAAQ,IAAME,EAAEC,cAAcH,OAASrB,EAC1DN,EAASL,EAAe,UAExBK,EAASL,EAAe,kBA6BtB,sBAAKT,UAAWC,IAAE4C,oBAAlB,UACE,sBAAM7C,UAAWC,IAAEuC,aAAnB,2BACA,cAACT,EAAD,CAAOU,MAAOrB,EACPb,KAAM,aACNG,OAAQM,EAAMN,OACdgC,SA9Bf,SAA4BC,GAC1BN,GAAeM,EAAEC,cAAcH,QAC1BE,EAAEC,cAAcH,MAAQ,IAAME,EAAEC,cAAcH,OAASpB,EAC1DP,EAASL,EAAe,UAExBK,EAASL,EAAe,qBA6BxB,qBAAKT,UAAWC,IAAE2B,cAAlB,SACE,cAAC9B,EAAD,CAAQS,KAAM,MACNa,WAAYJ,EAAMI,WAClBC,SAAUL,EAAMK,SAChBjB,YA7Bd,WACEU,EHCqB,SAACO,EAAkBD,GAAnB,MAAwD,CAC/ET,KAAMH,EAAYsC,QAClBzB,WACAD,cGJW2B,CAAU1B,EAAUD,IAC7BN,EAASL,EAAe,QA4BZJ,SAA2B,UAAjBW,EAAMN,cC/CjBsC,MAdf,WAEE,OACE,sBAAKhD,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACkC,EAAD,MAEF,qBAAKlC,UAAU,UAAf,SACE,cAACa,EAAD,UCCOoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDRQ,EAAiC,CACrCrC,SAAU,EACVD,WAAY,EACZV,OAAQ,WAoCKiD,EAjCQ,WAAkE,IAAjE3C,EAAgE,uDAAxD0C,EAAcE,EAA0C,uCACtF,OAAQA,EAAOjD,MACb,KAAKH,EAAYqB,UACf,OAAIb,EAAMI,WAAaJ,EAAMK,SAEpB,2BACFL,GADL,IAEEI,WAAYJ,EAAMI,WAAa,IAI5BJ,EACT,KAAKR,EAAYsB,YACf,OAAO,2BACFd,GADL,IAEEI,WAAY,IAEhB,KAAKZ,EAAYsC,QACf,OAAO,2BACF9B,GADL,IAEEK,SAAUuC,EAAOvC,SACjBD,WAAYwC,EAAOxC,aAEvB,KAAKZ,EAAYI,cACf,OAAO,2BACFI,GADL,IAEEN,OAAQkD,EAAOlD,SAEnB,QACE,OAAOM,ICxCT6C,EAAWC,YAAgB,CAC7B5C,QAASyC,IAKAI,EAAQC,YAAYH,GCD/BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFI,SAASC,eAAe,SAG1BnB,K,kBCfArD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,gBAAkB,sCAAsC,kBAAoB,wCAAwC,oBAAsB,0CAA0C,aAAe,mCAAmC,cAAgB,oCAAoC,UAAY,kC,kBCApWD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,WAAa,4BAA4B,MAAQ,uBAAuB,QAAU,yBAAyB,UAAY,2BAA2B,cAAgB,+BAA+B,IAAM,uB,kBCAhQD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,UAAY,4B","file":"static/js/main.70a76b8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1kW5Z\",\"btn_text\":\"Button_btn_text__5FrpX\"};","import React from \"react\";\r\nimport s from './Button.module.css'\r\n\r\ntype PropsType = {\r\n  name: string\r\n  startValue: number\r\n  maxValue: number\r\n  disabled: boolean\r\n  changeCount: (value: any) => void\r\n}\r\n\r\nexport function Button(props: PropsType) {\r\n  return (\r\n    <>\r\n      <div className={s.btn}>\r\n        <button\r\n          onClick={props.changeCount}\r\n          disabled={props.disabled}\r\n        >\r\n          <span className={s.btn_text}>{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}","export enum ACTION_TYPE {\r\n  ADD_COUNT = 'ADD_COUNT',\r\n  RESET_COUNT = 'RESET_COUNT',\r\n  STATUS_CHANGE = 'STATUS_CHANGE',\r\n  CONTROL = 'CONTROL'\r\n}\r\n\r\nexport type AddCountACType = {\r\n  type: ACTION_TYPE.ADD_COUNT\r\n}\r\nexport type ResetCountACType = {\r\n  type: ACTION_TYPE.RESET_COUNT\r\n}\r\nexport type StatusChangeACType = {\r\n  type: ACTION_TYPE.STATUS_CHANGE\r\n  status: 'setting' | 'error' | 'ok'\r\n}\r\nexport type ControlACType = {\r\n  type: ACTION_TYPE.CONTROL\r\n  maxValue: number\r\n  startValue: number\r\n}\r\n\r\nexport type ActionTypes = AddCountACType | ResetCountACType | StatusChangeACType | ControlACType\r\n\r\nexport const addCountAC = (): ActionTypes => {\r\n  debugger\r\n  return {\r\n    type: ACTION_TYPE.ADD_COUNT\r\n  }\r\n}\r\nexport const resetCountAC = (): ActionTypes => ({\r\n  type: ACTION_TYPE.RESET_COUNT\r\n})\r\nexport const statusChangeAC = (status: 'setting' | 'error' | 'ok'): ActionTypes => ({\r\n  type: ACTION_TYPE.STATUS_CHANGE,\r\n  status\r\n})\r\nexport const controlAC = (maxValue: number, startValue: number): ActionTypes => ({\r\n  type: ACTION_TYPE.CONTROL,\r\n  maxValue,\r\n  startValue\r\n})","import React from \"react\";\r\nimport s from './Counter.module.css'\r\nimport {Button} from \"../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCountAC, resetCountAC} from \"../../redux/actions/addcountAC\";\r\nimport {StateType} from \"../../redux/store\";\r\nimport {CounterStateType} from \"../../redux/reducers/counter-reducer\";\r\n\r\nexport function Counter() {\r\n\r\n  const dispatch = useDispatch()\r\n  const state = useSelector<StateType, CounterStateType>(state => state.counter)\r\n\r\n  const classes = state.startValue === state.maxValue || state.status === 'error'\r\n    ? s.count_red\r\n    : ''\r\n  const classes_2 = state.status !== 'ok'\r\n    ? s.message\r\n    : s.count\r\n\r\n  const addCount = () => {\r\n    dispatch(addCountAC())\r\n  }\r\n  const resetCount = () => {\r\n    dispatch(resetCountAC())\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.scoreboard}>\r\n        <span className={classes + ' ' + classes_2}>\r\n          {\r\n            state.status === 'ok'\r\n              ? state.startValue\r\n              : state.status === 'error'\r\n              ? 'Incorrect value!'\r\n              : `enter values and press 'set'`\r\n          }\r\n        </span>\r\n      </div>\r\n      <div className={s.container_btn}>\r\n        <Button name={'inc'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={addCount}\r\n                disabled={state.startValue === state.maxValue ? true : false}\r\n        />\r\n        <Button name={'reset'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={resetCount}\r\n                disabled={state.startValue === 0 ? true : false}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './Input.module.css'\r\n\r\ntype PropsType = {\r\n  value: number\r\n  status: string\r\n  name: string\r\n  onChange: (value: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport function Input(props: PropsType) {\r\n  let classes = props.status === 'error' && props.name === 'startValue'\r\n    ? s.input_red\r\n    : props.status === 'error' && props.name === 'maxValue'\r\n      ? s.input_red\r\n      : ''\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          className={classes + ' ' + s.setting_input}\r\n          type=\"number\"\r\n          {...props}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SettingBlock.module.css';\r\nimport {Button} from \"../Button/Button\";\r\nimport {Input} from \"../Input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {controlAC, statusChangeAC} from \"../../redux/actions/addcountAC\";\r\nimport {StateType} from \"../../redux/store\";\r\nimport {CounterStateType} from \"../../redux/reducers/counter-reducer\";\r\n\r\nexport function SettingBlock() {\r\n\r\n  const dispatch = useDispatch<Dispatch>()\r\n  const state = useSelector<StateType, CounterStateType>(state => state.counter)\r\n\r\n  let [maxValue, setMaxValue] = useState(state.maxValue)\r\n  let [startValue, setStartValue] = useState(state.startValue)\r\n\r\n  function onChangeMaxValue(e: ChangeEvent<HTMLInputElement>) {\r\n    setMaxValue(+e.currentTarget.value)\r\n    if (+e.currentTarget.value < 1 || +e.currentTarget.value <= startValue) {\r\n      dispatch(statusChangeAC('error'))\r\n    } else {\r\n      dispatch(statusChangeAC('setting'))\r\n    }\r\n  }\r\n\r\n  function onChangeStartValue(e: ChangeEvent<HTMLInputElement>) {\r\n    setStartValue(+e.currentTarget.value)\r\n    if (+e.currentTarget.value < 0 || +e.currentTarget.value >= maxValue) {\r\n      dispatch(statusChangeAC('error'))\r\n    } else {\r\n      dispatch(statusChangeAC('setting'))\r\n    }\r\n  }\r\n\r\n  function onClickFunction() {\r\n    dispatch(controlAC(maxValue, startValue))\r\n    dispatch(statusChangeAC('ok'))\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.window_settings}>\r\n        <div className={s.setting_max_value}>\r\n          <span className={s.params_value}>max value: </span>\r\n          <Input value={maxValue}\r\n                 name={'maxValue'}\r\n                 status={state.status}\r\n                 onChange={onChangeMaxValue}\r\n          />\r\n        </div>\r\n        <div className={s.setting_start_value}>\r\n          <span className={s.params_value}>start value: </span>\r\n          <Input value={startValue}\r\n                 name={'startValue'}\r\n                 status={state.status}\r\n                 onChange={onChangeStartValue}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={s.container_btn}>\r\n        <Button name={'set'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={onClickFunction}\r\n                disabled={state.status === 'error'}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport {Counter} from \"./components/Counter/Counter\";\nimport {SettingBlock} from \"./components/SettingBlock/SettingBlock\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"setting_block\">\n        <SettingBlock/>\n      </div>\n      <div className=\"counter\">\n        <Counter/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ACTION_TYPE, ActionTypes} from \"../actions/addcountAC\";\r\n\r\nexport type CounterStateType = {\r\n  maxValue: number\r\n  startValue: number\r\n  status: string\r\n}\r\n\r\nconst initialState: CounterStateType = {\r\n  maxValue: 5,\r\n  startValue: 1,\r\n  status: 'setting'\r\n}\r\n\r\nconst counterReducer = (state = initialState, action: ActionTypes): CounterStateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.ADD_COUNT:\r\n      if (state.startValue < state.maxValue) {\r\n        debugger\r\n        return {\r\n          ...state,\r\n          startValue: state.startValue + 1\r\n        }\r\n      }\r\n      debugger\r\n      return state\r\n    case ACTION_TYPE.RESET_COUNT:\r\n      return {\r\n        ...state,\r\n        startValue: 0\r\n      }\r\n    case ACTION_TYPE.CONTROL:\r\n      return {\r\n        ...state,\r\n        maxValue: action.maxValue,\r\n        startValue: action.startValue\r\n      }\r\n    case ACTION_TYPE.STATUS_CHANGE:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default counterReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport counterReducer from \"./reducers/counter-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  counter: counterReducer\r\n})\r\n\r\nexport type StateType = ReturnType<typeof reducers>\r\n\r\nexport let store = createStore(reducers)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingBlock_container__7qT8R\",\"window_settings\":\"SettingBlock_window_settings__1auPF\",\"setting_max_value\":\"SettingBlock_setting_max_value__3By9F\",\"setting_start_value\":\"SettingBlock_setting_start_value__CmLXs\",\"params_value\":\"SettingBlock_params_value__2ICUs\",\"container_btn\":\"SettingBlock_container_btn__2ykAt\",\"input_red\":\"SettingBlock_input_red__2OVjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__1z0en\",\"scoreboard\":\"Counter_scoreboard__2El_m\",\"count\":\"Counter_count__1vqWC\",\"message\":\"Counter_message__cemgy\",\"count_red\":\"Counter_count_red__1rrk7\",\"container_btn\":\"Counter_container_btn__1yPVx\",\"btn\":\"Counter_btn__2epHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_input\":\"Input_setting_input__1SUDJ\",\"input_red\":\"Input_input_red__2gm6J\"};"],"sourceRoot":""}