{"version":3,"sources":["components/Button/Button.module.css","components/Button/Button.tsx","redux/actions/addcountAC.ts","components/Counter/counterSelector.ts","components/Counter/Counter.tsx","components/Input/Input.tsx","components/SettingBlock/settingBlockSelector.ts","components/SettingBlock/SettingBlock.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/SettingBlock/SettingBlock.module.css","components/Counter/Counter.module.css","components/Input/Input.module.css"],"names":["module","exports","Button","props","className","s","btn","onClick","changeCount","disabled","btn_text","name","ACTION_TYPE","counterSelector","state","addCountAC","type","ADD_COUNT","resetCountAC","value","RESET_COUNT","statusChangeAC","status","STATUS_CHANGE","Counter","useDispatch","useSelector","classes","startValue","maxValue","count_red","classes_2","message","count","container","scoreboard","container_btn","Input","input_red","setting_input","settingBlockSelector","SettingBlock","dispatch","useState","setMaxValue","setStartValue","window_settings","setting_max_value","params_value","onChange","e","currentTarget","setting_start_value","CONTROL","controlAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","counter","store","createStore","rerenderEntireTree","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e74b9398.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3eb2d\",\"btn_text\":\"Button_btn_text__23V4t\"};","import React from \"react\";\r\nimport s from './Button.module.css'\r\n\r\ntype PropsType = {\r\n  name: string\r\n  startValue: number\r\n  maxValue: number\r\n  disabled: boolean\r\n  changeCount: (value: any) => void\r\n}\r\n\r\nexport function Button(props: PropsType) {\r\n  return (\r\n    <>\r\n      <div className={s.btn}>\r\n        <button\r\n          onClick={props.changeCount}\r\n          disabled={props.disabled}\r\n        >\r\n          <span className={s.btn_text}>{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}","export enum ACTION_TYPE {\r\n  ADD_COUNT = 'ADD_COUNT',\r\n  RESET_COUNT = 'RESET_COUNT',\r\n  STATUS_CHANGE = 'STATUS_CHANGE',\r\n  CONTROL = 'CONTROL'\r\n}\r\n\r\nexport type AddCountACType = {\r\n  type: ACTION_TYPE.ADD_COUNT\r\n}\r\nexport type ResetCountACType = {\r\n  type: ACTION_TYPE.RESET_COUNT\r\n  value: number\r\n}\r\nexport type StatusChangeACType = {\r\n  type: ACTION_TYPE.STATUS_CHANGE\r\n  status: 'setting' | 'error' | 'ok'\r\n}\r\nexport type ControlACType = {\r\n  type: ACTION_TYPE.CONTROL\r\n  maxValue: number\r\n  startValue: number\r\n}\r\n\r\nexport type ActionTypes = AddCountACType | ResetCountACType | StatusChangeACType | ControlACType\r\n\r\nexport const addCountAC = (): ActionTypes => ({\r\n  type: ACTION_TYPE.ADD_COUNT\r\n})\r\nexport const resetCountAC = (value: number): ActionTypes => ({\r\n  type: ACTION_TYPE.RESET_COUNT,\r\n  value\r\n})\r\nexport const statusChangeAC = (status: 'setting' | 'error' | 'ok'): ActionTypes => ({\r\n  type: ACTION_TYPE.STATUS_CHANGE,\r\n  status\r\n})\r\nexport const controlAC = (maxValue: number, startValue: number): ActionTypes => ({\r\n  type: ACTION_TYPE.CONTROL,\r\n  maxValue,\r\n  startValue\r\n})","import {StateType} from \"../../redux/reducers/counter-reducer\";\r\n\r\ninterface ICounterstate extends StateType {}\r\n\r\nexport const counterSelector = (state: ICounterstate) => state","import React from \"react\";\r\nimport s from './Counter.module.css'\r\nimport {Button} from \"../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {counterSelector} from \"./counterSelector\";\r\nimport {addCountAC, resetCountAC} from \"../../redux/actions/addcountAC\";\r\n\r\nexport function Counter() {\r\n\r\n  const dispatch = useDispatch<Dispatch>()\r\n  const state = useSelector(counterSelector)\r\n\r\n  const classes = state.startValue === state.maxValue || state.status === 'error'\r\n    ? s.count_red\r\n    : ''\r\n  const classes_2 = state.status !== 'ok'\r\n    ? s.message\r\n    : s.count\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.scoreboard}>\r\n        <span className={classes + ' ' + classes_2}>\r\n          {\r\n            state.status === 'ok'\r\n              ? state.startValue\r\n              : state.status === 'error'\r\n              ? 'Incorrect value!'\r\n              : `enter values and press 'set'`\r\n          }\r\n        </span>\r\n      </div>\r\n      <div className={s.container_btn}>\r\n        <Button name={'inc'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={addCountAC}\r\n                disabled={state.startValue === state.maxValue ? true : false}\r\n        />\r\n        <Button name={'reset'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={resetCountAC}\r\n                disabled={state.startValue === 0 ? true : false}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './Input.module.css'\r\n\r\ntype PropsType = {\r\n  value: number\r\n  status: string\r\n  name: string\r\n  onChange: (value: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport function Input(props: PropsType) {\r\n  let classes = props.status === 'error' && props.name === 'startValue'\r\n    ? s.input_red\r\n    : props.status === 'error' && props.name === 'maxValue'\r\n      ? s.input_red\r\n      : ''\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          className={classes + ' ' + s.setting_input}\r\n          type=\"number\"\r\n          {...props}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}","import {StateType} from \"../../redux/reducers/counter-reducer\";\r\n\r\ninterface ISettingState extends StateType {}\r\n\r\nexport const settingBlockSelector = (state: ISettingState) => state","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './SettingBlock.module.css';\r\nimport {Button} from \"../Button/Button\";\r\nimport {Input} from \"../Input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {settingBlockSelector} from \"./settingBlockSelector\";\r\nimport {controlAC, statusChangeAC} from \"../../redux/actions/addcountAC\";\r\n\r\nexport function SettingBlock() {\r\n\r\n  const dispatch = useDispatch<Dispatch>()\r\n  const state = useSelector(settingBlockSelector)\r\n\r\n  let [maxValue, setMaxValue] = useState(state.maxValue)\r\n  let [startValue, setStartValue] = useState(state.startValue)\r\n\r\n  function onChangeMaxValue(e: ChangeEvent<HTMLInputElement>) {\r\n    setMaxValue(+e.currentTarget.value)\r\n    if (+e.currentTarget.value < 1 || +e.currentTarget.value <= startValue) {\r\n      dispatch(statusChangeAC('error'))\r\n    } else {\r\n      dispatch(statusChangeAC('setting'))\r\n    }\r\n  }\r\n\r\n  function onChangeStartValue(e: ChangeEvent<HTMLInputElement>) {\r\n    setStartValue(+e.currentTarget.value)\r\n    if (+e.currentTarget.value < 0 || +e.currentTarget.value >= maxValue) {\r\n      dispatch(statusChangeAC('error'))\r\n    } else {\r\n      dispatch(statusChangeAC('setting'))\r\n    }\r\n  }\r\n\r\n  function onClickFunction() {\r\n    dispatch(controlAC(maxValue, startValue))\r\n    dispatch(statusChangeAC('ok'))\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.window_settings}>\r\n        <div className={s.setting_max_value}>\r\n          <span className={s.params_value}>max value: </span>\r\n          <Input value={maxValue}\r\n                 name={'maxValue'}\r\n                 status={state.status}\r\n                 onChange={onChangeMaxValue}\r\n          />\r\n        </div>\r\n        <div className={s.setting_start_value}>\r\n          <span className={s.params_value}>start value: </span>\r\n          <Input value={startValue}\r\n                 name={'startValue'}\r\n                 status={state.status}\r\n                 onChange={onChangeStartValue}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={s.container_btn}>\r\n        <Button name={'set'}\r\n                startValue={state.startValue}\r\n                maxValue={state.maxValue}\r\n                changeCount={onClickFunction}\r\n                disabled={state.status === 'error'}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport {Counter} from \"./components/Counter/Counter\";\nimport {SettingBlock} from \"./components/SettingBlock/SettingBlock\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"setting_block\">\n        <SettingBlock/>\n      </div>\n      <div className=\"counter\">\n        <Counter/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\n\r\nlet reducers = combineReducers({\r\n  counter: combineReducers\r\n})\r\n\r\nexport let store = createStore(reducers)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nlet rerenderEntireTree = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>\n    ,\n    document.getElementById('root')\n  );\n}\n\nrerenderEntireTree()\n\nstore.subscribe(() => {\n  rerenderEntireTree()\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SettingBlock_container__21gRr\",\"window_settings\":\"SettingBlock_window_settings__1_FFS\",\"setting_max_value\":\"SettingBlock_setting_max_value__3_oUC\",\"setting_start_value\":\"SettingBlock_setting_start_value__2d8Ie\",\"params_value\":\"SettingBlock_params_value__2XtUj\",\"container_btn\":\"SettingBlock_container_btn__3gdLD\",\"input_red\":\"SettingBlock_input_red__1kjR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__3UXJN\",\"scoreboard\":\"Counter_scoreboard__3l212\",\"count\":\"Counter_count__WJDqh\",\"message\":\"Counter_message__3AFYT\",\"count_red\":\"Counter_count_red__2tEjS\",\"container_btn\":\"Counter_container_btn__1V0_A\",\"btn\":\"Counter_btn__3IArA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_input\":\"Input_setting_input__2ZMwk\",\"input_red\":\"Input_input_red__3F00w\"};"],"sourceRoot":""}